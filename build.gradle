// Copyright 2016 Yahoo Inc.
// Licensed under the terms of the New-BSD license. Please see LICENSE file in the project root for terms.

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'
//apply plugin: 'me.champeau.gradle:jmh-gradle-plugin:0.3.0'

//jmh {
//  jmhVersion = '1.12'
//}


test {
  testLogging.showStandardStreams = true
  outputs.upToDateWhen {false}
  
  // enable TestNG support (default is JUnit)
  useTestNG()

  if (System.properties['os.name'] == "Mac OS X") { 
    // set a system property for the test JVM(s)
    systemProperty 'java.library.path','target/native/x86_64-darwin-clang'
  }

  if (System.properties['os.name'] == "Linux") { 
    // set a system property for the test JVM(s)
    systemProperty 'java.library.path','target/native/x86_64-linux-gcc'
  }

  testLogging {
    exceptionFormat = 'full'
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// FIXME: these bits should be a plugin we can reuse.
task buildJni(type:Exec) {
  commandLine 'make'
}

// https://docs.gradle.org/current/userguide/java_plugin.html
buildJni.shouldRunAfter compileJava

build.dependsOn(buildJni)
test.dependsOn(buildJni)

dependencies {
    testCompile group: 'org.testng', name: 'testng', version: '6.8.5'
    runtime group: 'log4j', name: 'log4j', version: '1.2.14'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.7'
    testCompile group: 'org.openjdk.jmh', name: 'jmh-core', version: 1.12
    testCompile group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: 1.12
    testCompile group: 'org.openjdk.jol', name: 'jol-core', version: 0.5
    testCompile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.16'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'com.yahoo.example.codegen'
            artifactId 'codegen'
            version '1.0.0'

            from components.java

            artifact sourcesJar {
                classifier "sources"
            }
        }
    }
}

task printClasspath {
    doLast {
        configurations.testRuntime.each { print it; print ":" }
        print "build/main/classes:build/test/classes"
    }
}